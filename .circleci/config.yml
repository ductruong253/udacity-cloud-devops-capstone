# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:
  build-backend:
    docker:
      - image: cimg/node:18.16.0
    steps:
      - checkout
      - restore_cache:
          keys: [backend-build]
      - run:
          name: Back-end build
          command: |
            cd backend
            npm install
            npm run build
      - save_cache:
          paths: [backend/node_modules]
          key: backend-build
  
  test-backend:
    docker:
      - image: cimg/node:18.16.0
    steps:
      - checkout
      - run:
          name: Back-end test
          command: |
            cd backend
            npm install
            npm run test

  scan-backend:
    docker:
      - image: cimg/node:18.16.0
    steps:
      - checkout
      - run:
          name: Back-end audit
          command: |
            cd backend
            npm install
            npm run lint
            npm audit fix --audit-level=critical --force

  build-image:
    environment:
      IMAGE_NAME: backend-service
    docker:
      - image: circleci/buildpack-deps:stretch
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: |
            cd backend && pwd && ls |
            sudo docker build -t $IMAGE_NAME:latest .

  publish-latest:
    environment:
      IMAGE_NAME: backend-service
    docker:
      - image: circleci/buildpack-deps:stretch
    steps:
      - setup_remote_docker
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push $IMAGE_NAME:latest

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  default:
    jobs:
      - build-backend
      - test-backend:
          requires: [build-backend]
      - scan-backend:
          requires: [build-backend]
      - build-image:
          requires: [build-backend, test-backend, scan-backend]
      - publish-latest:
          requires: [build-image]
