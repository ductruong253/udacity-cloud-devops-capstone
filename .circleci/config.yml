# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:
  build-backend:
    docker:
      - image: cimg/node:18.16.0
    steps:
      - checkout
      - restore_cache:
          keys: [backend-build]
      - run:
          name: Back-end build
          command: |
            cd backend
            npm install
            npm run build
      - save_cache:
          paths: [backend/node_modules]
          key: backend-build
  
  test-backend:
    docker:
      - image: cimg/node:18.16.0
    steps:
      - checkout
      - run:
          name: Back-end test
          command: |
            cd backend
            npm install
            npm run test

  scan-backend:
    docker:
      - image: cimg/node:18.16.0
    steps:
      - checkout
      - run:
          name: Back-end audit
          command: |
            cd backend
            npm install
            npm run lint
            npm audit fix --audit-level=critical --force

  build-and-push-image:
    environment:
        IMAGE_NAME: backend-service

    docker:
      - image: cimg/node:18.16.0

    steps:
      - checkout

      - setup_remote_docker:
          version: 19.03.13

      - run:
          name: Build docker image
          command: |
            cd backend
            sudo docker build --tag=$IMAGE_NAME:latest .
            sudo docker images ls

      - run:
          name: Upload Docker image to Dockerhub
          command: |
            echo "Docker ID and Image: $IMAGE_NAME"
            sudo docker login -u="$DOCKERHUB_USERNAME" -p="$DOCKERHUB_PASS"
            sudo docker tag $IMAGE_NAME $DOCKERHUB_USERNAME/$IMAGE_NAME:latest
            sudo docker push $DOCKERHUB_USERNAME/$IMAGE_NAME:latest

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  default:
    jobs:
      - build-backend
      - test-backend:
          requires: [build-backend]
      - scan-backend:
          requires: [build-backend]
      - build-and-push-image:
          requires: [build-backend, test-backend, scan-backend]
